{"version":3,"sources":["constants/actionTypes.js","actions/authActions.js","components/itemheader.js","actions/itemActions.js","components/itemlist.js","components/itemdetail.js","components/item.js","components/login.js","components/register.js","components/authentication.js","components/Buy.js","components/Reciept.js","reducers/authReducer.js","reducers/itemReducer.js","stores/store.js","App.js","reportWebVitals.js","index.js"],"names":["Constants","USER_LOGGEDIN","USER_LOGOUT","FETCH_ITEMS","FETCH_ITEM","SET_ITEM","SET_CHECKOUT","submitLogin","data","env","runtimeEnv","dispatch","fetch","REACT_APP_API_URL","method","headers","body","JSON","stringify","mode","then","response","ok","Error","statusText","json","res","username","localStorage","setItem","token","type","actionTypes","catch","e","console","log","logoutUser","removeItem","ItemHeader","this","props","Navbar","expand","bg","variant","Brand","Toggle","aria-controls","Collapse","id","Nav","to","Link","disabled","loggedIn","selectedItem","itemId","onClick","logout","bind","Component","connect","state","auth","item","setCheckout","name","cardNum","charity","payedAmt","donatedAmt","donationStatus","shipAdr","checkoutSet","itemSet","fetchItem","getItem","fetchItems","items","Items","ItemList","handleClick","handleSelect","selectedIndex","ItemListCarousel","itemList","onSelect","map","Item","views","Image","className","src","imageUrl","thumbnail","Caption","glyph","itemName","itemDesc","ItemDetail","DetailInfo","Card","Header","Body","ListGroup","ListGroupItem","itemPrice","Button","color","useState","useParams","useDispatch","Login","updateDetails","login","details","password","event","Object","assign","target","value","setState","Form","Group","controlId","Label","Control","onChange","placeholder","Register","register","submitRegister","Authentication","toggleReg","userNotLoggedIn","showLogin","showReg","userLoggedIn","Buy","updatedInfo","valueAct","checkOut","donation","Math","round","parseInt","newPrice","Reciept","image","donatedStatus","window","location","href","initialState","authReducer","action","updated","constants","itemReducer","price","desc","middlewares","thunk","store","createStore","combineReducers","applyMiddleware","App","exact","path","render","eaxct","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.49ca517b.chunk.js","sourcesContent":["const Constants = {\r\n    USER_LOGGEDIN: 'USER_LOGGEDIN',\r\n    USER_LOGOUT: 'USER_LOGOUT',\r\n    FETCH_ITEMS: 'FETCH_ITEMS',\r\n    FETCH_ITEM: 'FETCH_ITEM',\r\n    SET_ITEM: 'SET_ITEM',\r\n    SET_CHECKOUT: 'SET_CHECKOUT'\r\n}\r\n\r\nexport default Constants;","import actionTypes from '../constants/actionTypes';\r\nimport runtimeEnv from '@mars/heroku-js-runtime-env'\r\n\r\nfunction userLoggedIn(username) {\r\n    return {\r\n        type: actionTypes.USER_LOGGEDIN,\r\n        username: username\r\n    }\r\n}\r\n\r\nfunction logout() {\r\n    return {\r\n        type: actionTypes.USER_LOGOUT\r\n    }\r\n}\r\n\r\nexport function submitLogin(data) {\r\n    const env = runtimeEnv();\r\n    return dispatch => {\r\n        return fetch(`${env.REACT_APP_API_URL}/signin`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(data),\r\n            mode: 'cors'\r\n        }).then((response) => {\r\n            if (!response.ok) {\r\n                throw Error(response.statusText);\r\n            }\r\n            return response.json()\r\n        }).then((res) => {\r\n            localStorage.setItem('username', data.username);\r\n            localStorage.setItem('token', res.token);\r\n\r\n            dispatch(userLoggedIn(data.username));\r\n        }).catch((e) => console.log(e));\r\n    }\r\n}\r\n\r\nexport function submitRegister(data) {\r\n    const env = runtimeEnv();\r\n    return dispatch => {\r\n        return fetch(`${env.REACT_APP_API_URL}/signup`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(data),\r\n            mode: 'cors'\r\n        }).then((response) => {\r\n            if (!response.ok) {\r\n                throw Error(response.statusText);\r\n            }\r\n            return response.json()\r\n        }).then((res) => {\r\n            dispatch(submitLogin(data));\r\n        }).catch((e) => console.log(e));\r\n    }\r\n}\r\n\r\nexport function logoutUser() {\r\n    return dispatch => {\r\n        localStorage.removeItem('username');\r\n        localStorage.removeItem('token');\r\n        dispatch(logout())\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport {Navbar, Nav} from 'react-bootstrap';\r\nimport {LinkContainer} from 'react-router-bootstrap';\r\nimport {connect} from 'react-redux';\r\nimport {logoutUser} from \"../actions/authActions\";\r\n\r\nclass ItemHeader extends Component {\r\n    logout() {\r\n        this.props.dispatch(logoutUser());\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Navbar expand=\"lg\" bg=\"dark\" variant=\"dark\">\r\n                    <Navbar.Brand>\r\n                        Item App\r\n                    </Navbar.Brand>\r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                    <Nav>\r\n                            <LinkContainer to=\"/itemlist\">\r\n                                <Nav.Link disabled={!this.props.loggedIn}>Item List</Nav.Link>\r\n                            </LinkContainer>\r\n                            <LinkContainer to={'/item/' + (this.props.selectedItem ? this.props.selectedItem.itemId : '')}>\r\n                                <Nav.Link disabled={!this.props.loggedIn}>Item Detail</Nav.Link>\r\n                            </LinkContainer>\r\n                            <LinkContainer to=\"/signin\">\r\n                                <Nav.Link>{this.props.loggedIn ? <button onClick={this.logout.bind(this)}>Logout</button> : 'Login'}</Nav.Link>\r\n                            </LinkContainer>\r\n                    </Nav>\r\n                    </Navbar.Collapse>\r\n                </Navbar>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loggedIn : state.auth.loggedIn,\r\n        username : state.auth.username,\r\n        selectedItem: state.item.selectedItem\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(ItemHeader);\r\n","import actionTypes from '../constants/actionTypes';\r\nimport runtimeEnv from '@mars/heroku-js-runtime-env'\r\n\r\n\r\nfunction itemsFetched(items) {\r\n    return {\r\n        type: actionTypes.FETCH_ITEMS,\r\n        items: items\r\n    }\r\n}\r\n\r\nfunction itemFetched(item) {\r\n    return {\r\n        type: actionTypes.FETCH_ITEM,\r\n        selectedItem: item\r\n    }\r\n}\r\n\r\nfunction itemSet(item) {\r\n    return {\r\n        type: actionTypes.SET_ITEM,\r\n        selectedItem: item\r\n    }\r\n}\r\n\r\nfunction checkoutSet(data){\r\n    return{\r\n        type: actionTypes.SET_CHECKOUT,\r\n        name: data.name,\r\n        cardNum: data.cardNum,\r\n        charity: data.charity,\r\n        payedAmt: data.payedAmt,\r\n        donatedAmt: data.donatedAmt,\r\n        donationStatus: data.donationStatus,\r\n        shipAdr: data.shipAdr\r\n    }\r\n}\r\n\r\nexport function setCheckout(data){\r\n    return dispatch => {\r\n        dispatch(checkoutSet(data));\r\n    }\r\n}\r\n\r\nexport function setItem(item) {\r\n    return dispatch => {\r\n        dispatch(itemSet(item));\r\n    }\r\n}\r\n\r\nexport function fetchItem(itemId) {\r\n    const env = runtimeEnv();\r\n    return dispatch => {\r\n        return fetch(`${env.REACT_APP_API_URL}/items/${itemId}`, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                'Authorization': localStorage.getItem('token')\r\n            },\r\n            mode: 'cors'\r\n        }).then((response) => {\r\n            if (!response.ok) {\r\n                throw Error(response.statusText);\r\n            }\r\n            return response.json()\r\n        }).then((res) => {\r\n            dispatch(itemFetched(res));\r\n        }).catch((e) => console.log(e));\r\n    }\r\n}\r\n\r\nexport function fetchItems() {\r\n    const env = runtimeEnv();\r\n    return dispatch => {\r\n        return fetch(`${env.REACT_APP_API_URL}/items`, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                'Authorization': localStorage.getItem('token')\r\n            },\r\n            mode: 'cors'\r\n        }).then((response) => {\r\n            if (!response.ok) {\r\n                throw Error(response.statusText);\r\n            }\r\n            return response.json()\r\n        }).then((res) => {\r\n            dispatch(itemsFetched(res.Items));\r\n        }).catch((e) => console.log(e));\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { fetchItems } from \"../actions/itemActions\";\r\nimport { setItem } from \"../actions/itemActions\";\r\nimport {connect} from 'react-redux';\r\nimport {Image, Nav} from 'react-bootstrap';\r\n// import { Carousel } from 'react-bootstrap';\r\nimport Carousel, {Modal, ModalGateway} from 'react-images';\r\nimport { BsStarFill} from 'react-icons/bs'\r\nimport {LinkContainer} from 'react-router-bootstrap';\r\n\r\nclass ItemList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleSelect = this.handleSelect.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        const {dispatch} = this.props;\r\n        dispatch(fetchItems());\r\n    }\r\n\r\n    handleSelect(selectedIndex, e) {\r\n        const {dispatch} = this.props;\r\n        dispatch(setItem(this.props.items[selectedIndex]));\r\n    }\r\n\r\n    handleClick = (item) => {\r\n        const {dispatch} = this.props;\r\n        dispatch(setItem(item));\r\n    }\r\n\r\n    render() {\r\n        const ItemListCarousel = ({itemList}) => {\r\n            if (!itemList) {\r\n                return <div>Loading....</div>\r\n            }\r\n\r\n            return (\r\n                <Carousel onSelect={this.handleSelect}>\r\n                    {itemList.map((item) =>\r\n                        <Carousel.Item views={item.itemId}>\r\n                            <div>\r\n                                <LinkContainer to={'/item/'+item.itemId} onClick={()=>this.handleClick(item)}>\r\n                                    <Nav.Link><Image className=\"image\" src={item.imageUrl} thumbnail /></Nav.Link>\r\n                                </LinkContainer>\r\n                            </div>\r\n                            <Carousel.Caption>\r\n                                <h3>{item.itemId}</h3>\r\n                                <BsStarFill glyph={'star'} /> {item.itemName} &nbsp;&nbsp; {item.itemDesc}\r\n                            </Carousel.Caption>\r\n                        </Carousel.Item>\r\n                    )}\r\n\r\n                </Carousel>\r\n            )\r\n        }\r\n\r\n        return (\r\n            <ItemListCarousel itemList={this.props.items} />\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        items: state.item.items\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(ItemList);\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport { fetchItem } from \"../actions/itemActions\";\r\nimport {connect} from 'react-redux';\r\nimport {Card, ListGroup, ListGroupItem, Button} from 'react-bootstrap';\r\nimport {Link} from 'react-router-dom';\r\nimport { BsStarFill } from 'react-icons/bs';\r\nimport { Image } from 'react-bootstrap';\r\n\r\n\r\nclass ItemDetail extends Component {\r\n\r\n\r\n    componentDidMount() {\r\n        const {dispatch} = this.props;\r\n        if (this.props.selectedItem == null) {\r\n            dispatch(fetchItem(this.props.itemId));\r\n        }\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        const DetailInfo = () => {\r\n            if (!this.props.selectedItem) {\r\n                return <div>Loading....</div>\r\n            }\r\n\r\n            return (\r\n                <Card>\r\n                    <Card.Header>Item Detail</Card.Header>\r\n                    <Card.Body>\r\n                        <Image className=\"image\" src={this.props.selectedItem.imageUrl} thumbnail />\r\n                    </Card.Body>\r\n                    <ListGroup>\r\n                        <ListGroupItem>{this.props.selectedItem.itemId}</ListGroupItem>\r\n                        <ListGroupItem><h4><BsStarFill/> {this.props.selectedItem.itemName}</h4></ListGroupItem>\r\n                        <ListGroupItem>{\"$\" + this.props.selectedItem.itemPrice}</ListGroupItem>\r\n                        <ListGroupItem>{this.props.selectedItem.itemDesc}</ListGroupItem>\r\n                    </ListGroup>\r\n                    <Link to=\"/buy\">\r\n                        <Button color= \"blue\">Purchase</Button>\r\n                    </Link>\r\n                </Card>\r\n            )\r\n        }\r\n\r\n        return (\r\n            <DetailInfo />\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        selectedItem: state.item.selectedItem\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(ItemDetail);\r\n\r\n\r\n","import React, { useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux'\r\nimport { fetchItem } from \"../actions/itemActions\";\r\nimport ItemDetail from \"../components/itemdetail\"\r\n\r\n// support routing\r\n\r\nfunction Item(props) {\r\n    const [selectedItem] = useState(props.selectedItem);\r\n    const params = useParams();\r\n    const itemId = params.itemId;\r\n    console.log(itemId);\r\n    const dispatch = useDispatch();\r\n    if (selectedItem == null) {\r\n        dispatch(fetchItem(itemId));\r\n    }\r\n\r\n    return (<ItemDetail itemId={itemId} />)\r\n}\r\n\r\nexport default Item;\r\n","import React, { Component } from 'react';\r\nimport { submitLogin } from '../actions/authActions';\r\nimport { connect } from 'react-redux';\r\nimport { Form, Button } from 'react-bootstrap';\r\n\r\nclass Login extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.updateDetails = this.updateDetails.bind(this);\r\n        this.login = this.login.bind(this);\r\n\r\n        this.state = {\r\n            details:{\r\n                username: '',\r\n                password: ''\r\n            }\r\n        };\r\n    }\r\n\r\n    updateDetails(event){\r\n        let updateDetails = Object.assign({}, this.state.details);\r\n\r\n        updateDetails[event.target.id] = event.target.value;\r\n        this.setState({\r\n            details: updateDetails\r\n        });\r\n    }\r\n\r\n    login() {\r\n        const {dispatch} = this.props;\r\n        dispatch(submitLogin(this.state.details));\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <Form className='form-horizontal'>\r\n                <Form.Group controlId=\"username\">\r\n                    <Form.Label>Email</Form.Label>\r\n                    <Form.Control onChange={this.updateDetails} value={this.state.details.username} type=\"text\" placeholder=\"Enter Username\" />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"password\">\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control onChange={this.updateDetails} value={this.state.details.password}  type=\"password\" placeholder=\"Password\" />\r\n                </Form.Group>\r\n                <Button onClick={this.login}>Sign in</Button>\r\n            </Form>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Login);","import React, { Component} from 'react';\r\nimport { submitRegister } from '../actions/authActions';\r\nimport { connect } from 'react-redux';\r\nimport { Form, Button } from 'react-bootstrap';\r\n\r\nclass Register extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.updateDetails = this.updateDetails.bind(this);\r\n        this.register = this.register.bind(this);\r\n        this.state = {\r\n            details:{\r\n                username: '',\r\n                password: ''\r\n            }\r\n        };\r\n    }\r\n\r\n    updateDetails(event){\r\n        let updateDetails = Object.assign({}, this.state.details);\r\n\r\n        updateDetails[event.target.id] = event.target.value;\r\n        this.setState({\r\n            details: updateDetails\r\n        });\r\n    }\r\n\r\n    register(){\r\n        const {dispatch} = this.props;\r\n        dispatch(submitRegister(this.state.details));\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <Form className='form-horizontal'>\r\n                <Form.Group controlId=\"username\">\r\n                    <Form.Label>Email</Form.Label>\r\n                    <Form.Control onChange={this.updateDetails} value={this.state.details.username} type=\"text\" placeholder=\"Enter Username\" />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"password\">\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control onChange={this.updateDetails} value={this.state.details.password}  type=\"password\" placeholder=\"Password\" />\r\n                </Form.Group>\r\n                <Button onClick={this.register}>Register</Button>\r\n            </Form>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Register);","import React, { Component} from 'react';\r\nimport { connect } from 'react-redux'\r\nimport Login from './login';\r\nimport Register from './register';\r\nimport { logoutUser } from '../actions/authActions';\r\n\r\nclass Authentication extends Component {\r\n\r\n    constructor(){\r\n        super();\r\n\r\n        this.state = {\r\n            toggleReg: false\r\n        };\r\n    }\r\n\r\n    componentDidMount(){\r\n\r\n    }\r\n\r\n    showLogin(){\r\n        this.setState({\r\n            toggleReg: false\r\n        });\r\n    }\r\n\r\n    showReg(){\r\n        this.setState({\r\n            toggleReg: true\r\n        });\r\n    }\r\n\r\n    logout(){\r\n        this.props.dispatch(logoutUser());\r\n    }\r\n\r\n    render(){\r\n\r\n        const userNotLoggedIn = (\r\n            <div>\r\n                <button onClick={this.showLogin.bind(this)}>Login</button><button onClick={this.showReg.bind(this)}>Register</button>\r\n                { this.state.toggleReg ? <Register /> : <Login /> }\r\n            </div>\r\n        );\r\n        const userLoggedIn = (<div>Logged in as: {this.props.username} <button onClick={this.logout.bind(this)}>Logout</button></div>);\r\n\r\n        return (\r\n            <div>\r\n                {this.props.loggedIn ? userLoggedIn : userNotLoggedIn}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loggedIn: state.auth.loggedIn,\r\n        username: state.auth.username\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Authentication)","import React, { Component } from 'react';\r\nimport {fetchItem, setCheckout} from \"../actions/itemActions\";\r\nimport {connect} from 'react-redux';\r\nimport {Card, ListGroup, ListGroupItem, Form, Button} from 'react-bootstrap';\r\nimport {Link} from 'react-router-dom';\r\n\r\n\r\nclass Buy extends Component {\r\n\r\n    componentDidMount() {\r\n        const {dispatch} = this.props;\r\n        if (this.props.selectedItem == null) {\r\n            dispatch(fetchItem(this.props.itemId));\r\n        }\r\n    }\r\n\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n                name: '',\r\n                cardNum: '',\r\n                charity: '',\r\n                payedAmt: '',\r\n                donatedAmt: '',\r\n                donationStatus: '',\r\n                shipAdr: ''\r\n        };\r\n    }\r\n\r\n    updatedInfo = (valueAct, value) => {\r\n        switch (valueAct) {\r\n            case 0:\r\n                this.setState({name: value});\r\n                break;\r\n            case 1:\r\n                this.setState({cardNum: value});\r\n                break;\r\n            case 2:\r\n                this.setState({charity: value});\r\n                break;\r\n            case 3:\r\n                this.setState({payedAmt: value});\r\n                break;\r\n            case 4:\r\n                this.setState({donatedAmt: value});\r\n                break;\r\n            case 5:\r\n                this.setState({donationStatus: value});\r\n                break;\r\n            case 6:\r\n                this.setState({shipAdr: value});\r\n                break;\r\n            default:\r\n                console.log(\"Failed to set information for receipt, incorrect case value.\");\r\n\r\n        }\r\n    }\r\n\r\n    checkOut = () => {\r\n\r\n        if (this.state.charity !== \"N/A\") {\r\n            let donation = Math.round(parseInt(this.props.selectedItem.itemPrice)) - parseInt(this.props.selectedItem.itemPrice);\r\n            let newPrice = donation + parseInt(this.props.selectedItem.itemPrice);\r\n            this.updatedInfo(3, newPrice);\r\n            this.updatedInfo(5, 'Yes');\r\n            this.updatedInfo(4, donation);\r\n            const {dispatch} = this.props;\r\n            dispatch(setCheckout(this.state));\r\n        } else {\r\n            let newPrice = parseInt(this.props.selectedItem.itemPrice);\r\n            let donation = '0';\r\n            this.updatedInfo(3, newPrice);\r\n            this.updatedInfo(5, 'No');\r\n            this.updatedInfo(4, donation);\r\n            const {dispatch} = this.props;\r\n            dispatch(setCheckout(this.state));\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Card>\r\n                <Card.Header> Checkout</Card.Header>\r\n                <ListGroup>\r\n                    <ListGroupItem>{this.props.selectedItem.itemId}</ListGroupItem>\r\n                    <ListGroupItem>{this.props.selectedItem.itemName}</ListGroupItem>\r\n                    <ListGroupItem>{\"$\" + this.props.selectedItem.itemPrice}</ListGroupItem>\r\n                    <ListGroupItem>{this.props.selectedItem.itemDesc}</ListGroupItem>\r\n                </ListGroup>\r\n                <Form className='check-out'>\r\n                    <Form.Group controlId=\"Name\">\r\n                        <Form.Label>Name</Form.Label>\r\n                        <input onChange={(e) => this.updatedInfo(0, e.target.value)} type=\"text\" placeholder=\"Enter Name on card\"/>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"CardNum\">\r\n                        <Form.Label>Card Number</Form.Label>\r\n                        <input onChange={(e) => this.updatedInfo(1, e.target.value)} type=\"text\" placeholder=\"Enter card number\"/>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"ShippingAdr\">\r\n                        <Form.Label>Shipping Address</Form.Label>\r\n                        <input onChange={(e) => this.updatedInfo(6, e.target.value)} type=\"text\" placeholder=\"Enter Shipping Address\"/>\r\n                    </Form.Group>\r\n                </Form>\r\n\r\n                <label>Would You like to round up to the nearest dollar amount and donate the difference to charity?\r\n                    <select onChange={(e) => this.updatedInfo(2, e.target.value)}>\r\n                        <option value=\"N/A\">No donation.</option>\r\n                        <option value=\"Misplaced Mythical Creatures Foundation\">Donate to Misplaced Mythical Creatures\r\n                            Foundation\r\n                        </option>\r\n                        <option value=\"Foundation for the coding impaired\">Donate to the Charity for the coding\r\n                            impaired\r\n                        </option>\r\n                        <option value=\"Hell's moral improvement fund\">Donate to the hell's moral improvement fund\r\n                        </option>\r\n                    </select>\r\n                </label>\r\n                <Link to='./Reciept'>\r\n                    <Button type=\"button\" onClick={this.checkOut}>Finish Checkout</Button>\r\n                </Link>\r\n\r\n            </Card>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        selectedItem: state.item.selectedItem\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Buy);\r\n","import React, { Component } from 'react';\r\nimport { Image } from 'react-bootstrap';\r\nimport {connect} from 'react-redux';\r\nimport {Card, ListGroup, ListGroupItem, Button} from 'react-bootstrap';\r\n\r\n\r\n\r\n\r\nclass Reciept extends Component {\r\n    render() {\r\n        return (\r\n            <Card>\r\n                <Card.Header> Receipt</Card.Header>\r\n                <Card.Body>\r\n                    <Image className=\"image\" src={this.props.image} thumbnail/>\r\n                </Card.Body>\r\n                <ListGroup>\r\n                    <ListGroupItem>{\"Item Name: \" + this.props.selectedItem.itemName}</ListGroupItem>\r\n                    <ListGroupItem>{\"Item cost: $\" + this.props.selectedItem.itemPrice}</ListGroupItem>\r\n                    <ListGroupItem>{\"Item Desc: \" + this.props.selectedItem.itemDesc}</ListGroupItem>\r\n                    <ListGroupItem>{\"Name of buyer: \" + this.props.name}</ListGroupItem>\r\n                    <ListGroupItem>{\"Shipping Address: \" + this.props.shipAdr}</ListGroupItem>\r\n                    <ListGroupItem>{\"Total Payed: \" + this.props.payedAmt}</ListGroupItem>\r\n                    <ListGroupItem>{\"Making Donation?:\" + this.props.donatedStatus}</ListGroupItem>\r\n                    <ListGroupItem>{\"Total amount Donated: \" + this.props.donatedAmt}</ListGroupItem>\r\n                    <ListGroupItem>{\"Charity donated to: \" + this.props.charity}</ListGroupItem>\r\n                </ListGroup>\r\n\r\n\r\n                <Button onClick={() => {\r\n                    ;window.location.href = 'https://webapi-oddjobs.herokuapp.com'\r\n                }}>Return to home</Button>\r\n            </Card>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        selectedItem: state.item.selectedItem,\r\n        name: state.item.name,\r\n        cardNum: state.item.cardNum,\r\n        charity: state.item.charity,\r\n        payedAmt: state.item.payedAmt,\r\n        donatedAmt: state.item.donatedAmt,\r\n        donatedStatus: state.item.donatedStatus,\r\n        shipAdr: state.item.shipAdr\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Reciept);\r\n","import constants from '../constants/actionTypes'\r\n\r\nlet initialState = {\r\n    loggedIn: localStorage.getItem('token') ? true : false,\r\n    username: localStorage.getItem('username') ? localStorage.getItem('username') : ''\r\n}\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n\r\n    var updated = Object.assign({}, state);\r\n\r\n    switch (action.type) {\r\n        case constants.USER_LOGGEDIN:\r\n            updated['loggedIn'] = true;\r\n            updated['username'] = action.username;\r\n            return updated;\r\n\r\n        case constants.USER_LOGOUT:\r\n            updated['loggedIn'] = false;\r\n            updated['username'] = '';\r\n            return updated;\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default authReducer","import constants from '../constants/actionTypes'\r\n\r\nlet initialState = {\r\n      items: [],\r\n      selectedItem: null,\r\n      name: 'No Name',\r\n      cardNum: '0',\r\n      charity: 'N/A',\r\n      payedAmt: '0',\r\n      donatedAmt: '0',\r\n      donationStatus: 'No',\r\n      shipAdr: 'Missing Shipping Address'\r\n}\r\n\r\nconst itemReducer = (state = initialState, action) => {\r\n      let updated = Object.assign({}, state);\r\n\r\n      switch(action.type) {\r\n            case constants.FETCH_ITEMS:\r\n                  updated['items'] = action.items;\r\n                  updated['selectedItem'] = action.items[0];\r\n                  return updated;\r\n            case constants.SET_ITEM:\r\n                  updated['selectedItem'] = action.selectedItem;\r\n                  return updated;\r\n            case constants.FETCH_ITEM:\r\n                  updated['selectedItem'] = action.selectedItem;\r\n                  return updated;\r\n            case constants.SET_CHECKOUT:\r\n                  updated['itemName'] = action.itemName;\r\n                  updated['price'] = action.price;\r\n                  updated['desc'] = action.desc;\r\n                  updated['image'] = action.image;\r\n                  updated['name'] = action.name;\r\n                  updated['cardNum'] = action.cardNum;\r\n                  updated['charity'] = action.charity;\r\n                  updated['payedAmt'] = action.payedAmt;\r\n                  updated['donatedAmt'] = action.donatedAmt;\r\n                  updated['donationStatus'] = action.donationStatus;\r\n                  updated['shipAdr'] = action.shipAdr;\r\n                  return updated;\r\n            default:\r\n                  return state;\r\n      }\r\n}\r\n\r\nexport default itemReducer;","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport authReducer from \"../reducers/authReducer\";\r\nimport itemReducer from \"../reducers/itemReducer\";\r\nconst middlewares = [thunk];\r\n\r\nif (process.env.NODE_ENV === 'development') {\r\n    const { logger } = require('redux-logger');\r\n\r\n    middlewares.push(logger);\r\n}\r\n\r\nconst store = createStore(\r\n    combineReducers( {\r\n        auth: authReducer,\r\n        item: itemReducer\r\n    }),\r\n    applyMiddleware(\r\n        ...middlewares\r\n    )\r\n);\r\n\r\nexport default store;","import React from 'react';\r\nimport './App.css';\r\nimport ItemHeader from './components/itemheader';\r\nimport ItemList from './components/itemlist';\r\nimport Item from './components/item';\r\nimport Authentication from './components/authentication';\r\nimport Buy from './components/Buy';\r\nimport Reciept from \"./components/Reciept\";\r\nimport {HashRouter, Route} from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport store from './stores/store';\r\n\r\nfunction App() {\r\n  return (\r\n      <div className=\"App\">\r\n        <Provider store={store}>\r\n          <HashRouter>\r\n            <div>\r\n              <ItemHeader />\r\n              <Route exact path=\"/\" render={()=><ItemList />}/>\r\n              <Route exact path=\"/itemlist\" render={()=><ItemList />}/>\r\n              <Route exact path=\"/item/:itemId\" render={()=><Item />}/>\r\n              <Route path=\"/signin\" render={()=><Authentication />}/>\r\n              <Route eaxct path=\"/buy\" render={()=><Buy />}/>\r\n              <Route exact path=\"/Reciept\" render={()=> <Reciept/>} />\r\n            </div>\r\n          </HashRouter>\r\n        </Provider>\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}
{"ast":null,"code":"import actionTypes from'../constants/actionTypes';import runtimeEnv from'@mars/heroku-js-runtime-env';function userLoggedIn(username){return{type:actionTypes.USER_LOGGEDIN,username:username};}function logout(){return{type:actionTypes.USER_LOGOUT};}export function submitLogin(data){var env=runtimeEnv();return function(dispatch){return fetch(\"\".concat(env.REACT_APP_API_URL,\"/signin\"),{method:'POST',headers:{'Accept':'application/json','Content-Type':'application/json'},body:JSON.stringify(data),mode:'cors'}).then(function(response){if(!response.ok){throw Error(response.statusText);}return response.json();}).then(function(res){localStorage.setItem('username',data.username);localStorage.setItem('token',res.token);dispatch(userLoggedIn(data.username));}).catch(function(e){return console.log(e);});};}export function submitRegister(data){var env=runtimeEnv();return function(dispatch){return fetch(\"\".concat(env.REACT_APP_API_URL,\"/signup\"),{method:'POST',headers:{'Accept':'application/json','Content-Type':'application/json'},body:JSON.stringify(data),mode:'cors'}).then(function(response){if(!response.ok){throw Error(response.statusText);}return response.json();}).then(function(res){dispatch(submitLogin(data));}).catch(function(e){return console.log(e);});};}export function logoutUser(){return function(dispatch){localStorage.removeItem('username');localStorage.removeItem('token');dispatch(logout());};}","map":{"version":3,"sources":["C:/Users/mario/OneDrive/Documents/GitHub/projectApp/src/actions/authActions.js"],"names":["actionTypes","runtimeEnv","userLoggedIn","username","type","USER_LOGGEDIN","logout","USER_LOGOUT","submitLogin","data","env","dispatch","fetch","REACT_APP_API_URL","method","headers","body","JSON","stringify","mode","then","response","ok","Error","statusText","json","res","localStorage","setItem","token","catch","e","console","log","submitRegister","logoutUser","removeItem"],"mappings":"AAAA,MAAOA,CAAAA,WAAP,KAAwB,0BAAxB,CACA,MAAOC,CAAAA,UAAP,KAAuB,6BAAvB,CAEA,QAASC,CAAAA,YAAT,CAAsBC,QAAtB,CAAgC,CAC5B,MAAO,CACHC,IAAI,CAAEJ,WAAW,CAACK,aADf,CAEHF,QAAQ,CAAEA,QAFP,CAAP,CAIH,CAED,QAASG,CAAAA,MAAT,EAAkB,CACd,MAAO,CACHF,IAAI,CAAEJ,WAAW,CAACO,WADf,CAAP,CAGH,CAED,MAAO,SAASC,CAAAA,WAAT,CAAqBC,IAArB,CAA2B,CAC9B,GAAMC,CAAAA,GAAG,CAAGT,UAAU,EAAtB,CACA,MAAO,UAAAU,QAAQ,CAAI,CACf,MAAOC,CAAAA,KAAK,WAAIF,GAAG,CAACG,iBAAR,YAAoC,CAC5CC,MAAM,CAAE,MADoC,CAE5CC,OAAO,CAAE,CACL,SAAU,kBADL,CAEL,eAAgB,kBAFX,CAFmC,CAM5CC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAeT,IAAf,CANsC,CAO5CU,IAAI,CAAE,MAPsC,CAApC,CAAL,CAQJC,IARI,CAQC,SAACC,QAAD,CAAc,CAClB,GAAI,CAACA,QAAQ,CAACC,EAAd,CAAkB,CACd,KAAMC,CAAAA,KAAK,CAACF,QAAQ,CAACG,UAAV,CAAX,CACH,CACD,MAAOH,CAAAA,QAAQ,CAACI,IAAT,EAAP,CACH,CAbM,EAaJL,IAbI,CAaC,SAACM,GAAD,CAAS,CACbC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAiCnB,IAAI,CAACN,QAAtC,EACAwB,YAAY,CAACC,OAAb,CAAqB,OAArB,CAA8BF,GAAG,CAACG,KAAlC,EAEAlB,QAAQ,CAACT,YAAY,CAACO,IAAI,CAACN,QAAN,CAAb,CAAR,CACH,CAlBM,EAkBJ2B,KAlBI,CAkBE,SAACC,CAAD,QAAOC,CAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ,CAAP,EAlBF,CAAP,CAmBH,CApBD,CAqBH,CAED,MAAO,SAASG,CAAAA,cAAT,CAAwBzB,IAAxB,CAA8B,CACjC,GAAMC,CAAAA,GAAG,CAAGT,UAAU,EAAtB,CACA,MAAO,UAAAU,QAAQ,CAAI,CACf,MAAOC,CAAAA,KAAK,WAAIF,GAAG,CAACG,iBAAR,YAAoC,CAC5CC,MAAM,CAAE,MADoC,CAE5CC,OAAO,CAAE,CACL,SAAU,kBADL,CAEL,eAAgB,kBAFX,CAFmC,CAM5CC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAeT,IAAf,CANsC,CAO5CU,IAAI,CAAE,MAPsC,CAApC,CAAL,CAQJC,IARI,CAQC,SAACC,QAAD,CAAc,CAClB,GAAI,CAACA,QAAQ,CAACC,EAAd,CAAkB,CACd,KAAMC,CAAAA,KAAK,CAACF,QAAQ,CAACG,UAAV,CAAX,CACH,CACD,MAAOH,CAAAA,QAAQ,CAACI,IAAT,EAAP,CACH,CAbM,EAaJL,IAbI,CAaC,SAACM,GAAD,CAAS,CACbf,QAAQ,CAACH,WAAW,CAACC,IAAD,CAAZ,CAAR,CACH,CAfM,EAeJqB,KAfI,CAeE,SAACC,CAAD,QAAOC,CAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ,CAAP,EAfF,CAAP,CAgBH,CAjBD,CAkBH,CAED,MAAO,SAASI,CAAAA,UAAT,EAAsB,CACzB,MAAO,UAAAxB,QAAQ,CAAI,CACfgB,YAAY,CAACS,UAAb,CAAwB,UAAxB,EACAT,YAAY,CAACS,UAAb,CAAwB,OAAxB,EACAzB,QAAQ,CAACL,MAAM,EAAP,CAAR,CACH,CAJD,CAKH","sourcesContent":["import actionTypes from '../constants/actionTypes';\r\nimport runtimeEnv from '@mars/heroku-js-runtime-env'\r\n\r\nfunction userLoggedIn(username) {\r\n    return {\r\n        type: actionTypes.USER_LOGGEDIN,\r\n        username: username\r\n    }\r\n}\r\n\r\nfunction logout() {\r\n    return {\r\n        type: actionTypes.USER_LOGOUT\r\n    }\r\n}\r\n\r\nexport function submitLogin(data) {\r\n    const env = runtimeEnv();\r\n    return dispatch => {\r\n        return fetch(`${env.REACT_APP_API_URL}/signin`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(data),\r\n            mode: 'cors'\r\n        }).then((response) => {\r\n            if (!response.ok) {\r\n                throw Error(response.statusText);\r\n            }\r\n            return response.json()\r\n        }).then((res) => {\r\n            localStorage.setItem('username', data.username);\r\n            localStorage.setItem('token', res.token);\r\n\r\n            dispatch(userLoggedIn(data.username));\r\n        }).catch((e) => console.log(e));\r\n    }\r\n}\r\n\r\nexport function submitRegister(data) {\r\n    const env = runtimeEnv();\r\n    return dispatch => {\r\n        return fetch(`${env.REACT_APP_API_URL}/signup`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(data),\r\n            mode: 'cors'\r\n        }).then((response) => {\r\n            if (!response.ok) {\r\n                throw Error(response.statusText);\r\n            }\r\n            return response.json()\r\n        }).then((res) => {\r\n            dispatch(submitLogin(data));\r\n        }).catch((e) => console.log(e));\r\n    }\r\n}\r\n\r\nexport function logoutUser() {\r\n    return dispatch => {\r\n        localStorage.removeItem('username');\r\n        localStorage.removeItem('token');\r\n        dispatch(logout())\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}
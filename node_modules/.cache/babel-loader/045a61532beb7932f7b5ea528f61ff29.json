{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mario\\\\OneDrive\\\\Documents\\\\GitHub\\\\projectApp\\\\src\\\\components\\\\Buy.js\";\nimport React, { Component } from 'react';\nimport { fetchItem, setCheckout } from \"../actions/itemActions\";\nimport { connect } from 'react-redux';\nimport { Card, ListGroup, ListGroupItem, Form, Button } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Buy extends Component {\n  componentDidMount() {\n    const {\n      dispatch\n    } = this.props;\n\n    if (this.props.selectedItem == null) {\n      dispatch(fetchItem(this.props.itemId));\n    }\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.updatedInfo = (valueAct, value) => {\n      switch (valueAct) {\n        case 0:\n          this.setState({\n            name: value\n          });\n          break;\n\n        case 1:\n          this.setState({\n            cardNum: value\n          });\n          break;\n\n        case 2:\n          this.setState({\n            charity: value\n          });\n          break;\n\n        case 3:\n          this.setState({\n            payedAmt: value\n          });\n          break;\n\n        case 4:\n          this.setState({\n            donatedAmt: value\n          });\n          break;\n\n        case 5:\n          this.setState({\n            donationStatus: value\n          });\n          break;\n\n        case 6:\n          this.setState({\n            shipAdr: value\n          });\n          break;\n\n        default:\n          console.log(\"Failed to set information for receipt, incorrect case value.\");\n      }\n    };\n\n    this.checkOut = () => {\n      if (this.state.charity !== \"N/A\") {\n        let donation = Math.round(parseInt(this.props.selectedItem.itemPrice)) - parseInt(this.props.selectedItem.itemPrice);\n        let newPrice = donation + parseInt(this.props.selectedItem.itemPrice);\n        this.updatedInfo(3, newPrice);\n        this.updatedInfo(5, 'Yes');\n        this.updatedInfo(4, donation);\n        const {\n          dispatch\n        } = this.props;\n        dispatch(setCheckout(this.state));\n      } else {\n        let newPrice = parseInt(this.props.selectedItem.itemPrice);\n        let donation = '0';\n        this.updatedInfo(3, newPrice);\n        this.updatedInfo(5, 'No');\n        this.updatedInfo(4, donation);\n        const {\n          dispatch\n        } = this.props;\n        dispatch(setCheckout(this.state));\n      }\n    };\n\n    this.state = {\n      name: '',\n      cardNum: '',\n      charity: '',\n      payedAmt: 0,\n      donatedAmt: 0,\n      donationStatus: true,\n      shipAdr: ''\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n        children: \" Checkout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ListGroup, {\n        children: [/*#__PURE__*/_jsxDEV(ListGroupItem, {\n          children: this.props.selectedItem.itemId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ListGroupItem, {\n          children: this.props.selectedItem.itemName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ListGroupItem, {\n          children: \"$\" + this.props.selectedItem.itemPrice\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ListGroupItem, {\n          children: this.props.selectedItem.itemDesc\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        className: \"check-out\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"Name\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: e => this.updatedInfo(0, e.target.value),\n            type: \"text\",\n            placeholder: \"Enter Name on card\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"CardNum\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Card Number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: e => this.updatedInfo(1, e.target.value),\n            type: \"text\",\n            placeholder: \"Enter card number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"ShippingAdr\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Shipping Address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: e => this.updatedInfo(6, e.target.value),\n            type: \"text\",\n            placeholder: \"Enter Shipping Address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Would You like to round up to the nearest dollar amount and donate the difference to charity?\", /*#__PURE__*/_jsxDEV(\"select\", {\n          onChange: e => this.updatedInfo(2, e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"N/A\",\n            children: \"No donation.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Misplaced Mythical Creatures Foundation\",\n            children: \"Donate to Misplaced Mythical Creatures Foundation\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Foundation for the coding impaired\",\n            children: \"Donate to the Charity for the coding impaired\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Hell's moral improvement fund\",\n            children: \"Donate to the hell's moral improvement fund\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"./Reciept\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"button\",\n          onClick: this.checkOut,\n          children: \"Finish Checkout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    selectedItem: state.item.selectedItem\n  };\n};\n\nexport default connect(mapStateToProps)(Buy);","map":{"version":3,"sources":["C:/Users/mario/OneDrive/Documents/GitHub/projectApp/src/components/Buy.js"],"names":["React","Component","fetchItem","setCheckout","connect","Card","ListGroup","ListGroupItem","Form","Button","Link","Buy","componentDidMount","dispatch","props","selectedItem","itemId","constructor","updatedInfo","valueAct","value","setState","name","cardNum","charity","payedAmt","donatedAmt","donationStatus","shipAdr","console","log","checkOut","state","donation","Math","round","parseInt","itemPrice","newPrice","render","itemName","itemDesc","e","target","mapStateToProps","item"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport {fetchItem, setCheckout} from \"../actions/itemActions\";\r\nimport {connect} from 'react-redux';\r\nimport {Card, ListGroup, ListGroupItem, Form, Button} from 'react-bootstrap';\r\nimport {Link} from 'react-router-dom';\r\n\r\n\r\nclass Buy extends Component {\r\n\r\n    componentDidMount() {\r\n        const {dispatch} = this.props;\r\n        if (this.props.selectedItem == null) {\r\n            dispatch(fetchItem(this.props.itemId));\r\n        }\r\n    }\r\n\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n                name: '',\r\n                cardNum: '',\r\n                charity: '',\r\n                payedAmt: 0,\r\n                donatedAmt: 0,\r\n                donationStatus: true,\r\n                shipAdr: ''\r\n        };\r\n    }\r\n\r\n    updatedInfo = (valueAct, value) => {\r\n        switch (valueAct) {\r\n            case 0:\r\n                this.setState({name: value});\r\n                break;\r\n            case 1:\r\n                this.setState({cardNum: value});\r\n                break;\r\n            case 2:\r\n                this.setState({charity: value});\r\n                break;\r\n            case 3:\r\n                this.setState({payedAmt: value});\r\n                break;\r\n            case 4:\r\n                this.setState({donatedAmt: value});\r\n                break;\r\n            case 5:\r\n                this.setState({donationStatus: value});\r\n                break;\r\n            case 6:\r\n                this.setState({shipAdr: value});\r\n                break;\r\n            default:\r\n                console.log(\"Failed to set information for receipt, incorrect case value.\");\r\n\r\n        }\r\n    }\r\n\r\n    checkOut = () => {\r\n\r\n        if (this.state.charity !== \"N/A\") {\r\n            let donation = Math.round(parseInt(this.props.selectedItem.itemPrice)) - parseInt(this.props.selectedItem.itemPrice);\r\n            let newPrice = donation + parseInt(this.props.selectedItem.itemPrice);\r\n            this.updatedInfo(3, newPrice);\r\n            this.updatedInfo(5, 'Yes');\r\n            this.updatedInfo(4, donation);\r\n            const {dispatch} = this.props;\r\n            dispatch(setCheckout(this.state));\r\n        } else {\r\n            let newPrice = parseInt(this.props.selectedItem.itemPrice);\r\n            let donation = '0';\r\n            this.updatedInfo(3, newPrice);\r\n            this.updatedInfo(5, 'No');\r\n            this.updatedInfo(4, donation);\r\n            const {dispatch} = this.props;\r\n            dispatch(setCheckout(this.state));\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Card>\r\n                <Card.Header> Checkout</Card.Header>\r\n                <ListGroup>\r\n                    <ListGroupItem>{this.props.selectedItem.itemId}</ListGroupItem>\r\n                    <ListGroupItem>{this.props.selectedItem.itemName}</ListGroupItem>\r\n                    <ListGroupItem>{\"$\" + this.props.selectedItem.itemPrice}</ListGroupItem>\r\n                    <ListGroupItem>{this.props.selectedItem.itemDesc}</ListGroupItem>\r\n                </ListGroup>\r\n                <Form className='check-out'>\r\n                    <Form.Group controlId=\"Name\">\r\n                        <Form.Label>Name</Form.Label>\r\n                        <input onChange={(e) => this.updatedInfo(0, e.target.value)} type=\"text\" placeholder=\"Enter Name on card\"/>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"CardNum\">\r\n                        <Form.Label>Card Number</Form.Label>\r\n                        <input onChange={(e) => this.updatedInfo(1, e.target.value)} type=\"text\" placeholder=\"Enter card number\"/>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"ShippingAdr\">\r\n                        <Form.Label>Shipping Address</Form.Label>\r\n                        <input onChange={(e) => this.updatedInfo(6, e.target.value)} type=\"text\" placeholder=\"Enter Shipping Address\"/>\r\n                    </Form.Group>\r\n                </Form>\r\n\r\n                <label>Would You like to round up to the nearest dollar amount and donate the difference to charity?\r\n                    <select onChange={(e) => this.updatedInfo(2, e.target.value)}>\r\n                        <option value=\"N/A\">No donation.</option>\r\n                        <option value=\"Misplaced Mythical Creatures Foundation\">Donate to Misplaced Mythical Creatures\r\n                            Foundation\r\n                        </option>\r\n                        <option value=\"Foundation for the coding impaired\">Donate to the Charity for the coding\r\n                            impaired\r\n                        </option>\r\n                        <option value=\"Hell's moral improvement fund\">Donate to the hell's moral improvement fund\r\n                        </option>\r\n                    </select>\r\n                </label>\r\n                <Link to='./Reciept'>\r\n                    <Button type=\"button\" onClick={this.checkOut}>Finish Checkout</Button>\r\n                </Link>\r\n\r\n            </Card>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        selectedItem: state.item.selectedItem\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Buy);\r\n"]},"metadata":{},"sourceType":"module"}